<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="org.xi.sso.server.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="org.xi.sso.server.entity.UserEntity">
        <result property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="email" column="email"/>
        <result property="password" column="password"/>
        <result property="nickName" column="nick_name"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <parameterMap id="BaseParameterMap" type="org.xi.sso.server.entity.UserEntity"></parameterMap>

    <insert id="insert" parameterMap="BaseParameterMap" useGeneratedKeys="true" keyProperty="id">
        insert into `user`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">`username`,</if>
            <if test="email != null">`email`,</if>
            <if test="password != null">`password`,</if>
            <if test="nickName != null">`nick_name`,</if>
            <if test="isDeleted != null">`is_deleted`,</if>
            <if test="createTime != null">`create_time`,</if>
            <if test="updateTime != null">`update_time`,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">#{username},</if>
            <if test="email != null">#{email},</if>
            <if test="password != null">#{password},</if>
            <if test="nickName != null">#{nickName},</if>
            <if test="isDeleted != null">#{isDeleted},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <select id="getById" resultMap="BaseResultMap">
        SELECT DISTINCT
            `user`.`id`,
            `user`.`username`,
            `user`.`email`,
            `user`.`password`,
            `user`.`nick_name`,
            `user`.`is_deleted`,
            `user`.`create_time`,
            `user`.`update_time`
        FROM
            `user`
        WHERE
            `user`.`id` = #{id}
    </select>

    <select id="getByUsername" resultMap="BaseResultMap">
        SELECT DISTINCT
            `user`.`id`,
            `user`.`username`,
            `user`.`email`,
            `user`.`password`,
            `user`.`nick_name`,
            `user`.`is_deleted`,
            `user`.`create_time`,
            `user`.`update_time`
        FROM
            `user`
        WHERE
            `user`.`username` = #{username}
    </select>
</mapper>
